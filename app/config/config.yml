imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
#        naming_strategy: doctrine.orm.naming_strategy.underscore
#        auto_mapping: true
        entity_managers:
            default:
                auto_mapping: true
                # New custom filter
                filters:
                    oneLocale:
                        class: A2lix\I18nDoctrineBundle\Doctrine\ORM\Filter\OneLocaleFilter
                        enabled: true
# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }
fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations



sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.block.service.tasks: ~
        sonata.admin.block.admin_list:
            contexts:   [admin]

        sonata.admin.block.search_result:
            contexts:   [admin]

#        sonata.block.service.text:
#        sonata.block.service.rss:

#        sonata.user.block.menu:    # used to display the menu in profile pages
#        sonata.user.block.account: # used to display menu option (login option)
#        sonata.block.service.text: # used to if you plan to use Sonata user routes

        # enable the SonataAdminBundle block
#        sonata.admin.block.admin_list:
#            contexts: [admin]
    exception:
        default:
            renderer:               throw
        renderers:
            inline:                 sonata.block.exception.renderer.inline
            inline_debug:           sonata.block.exception.renderer.inline_debug
            throw:                  sonata.block.exception.renderer.throw
#        sonata.block.service.text:
#            exception: { renderer: inline }
#        # ...
sonata_admin:
    security:
#        handler: sonata.admin.security.handler.acl
        # acl security information
#        information:
#            GUEST:    [VIEW, LIST]
#            STAFF:    [EDIT, LIST, CREATE]
#            EDITOR:   [OPERATOR, EXPORT]
#            ADMIN:    [MASTER]

        # permissions not related to an object instance and also to be available when objects do not exist
        # the DELETE admin permission means the user is allowed to batch delete objects
#        admin_permissions: [CREATE, LIST, DELETE, UNDELETE, EXPORT, OPERATOR, MASTER]

        # permission related to the objects
#        object_permissions: [VIEW, EDIT, DELETE, UNDELETE, OPERATOR, MASTER, OWNER]
#
#    dashboard:
#        blocks:
#            - { position: top, type: sonata.block.service.tasks, class: col-md-12}

    title: Khidmati
    title_logo: http://www.emarkhor.com/khidmati/assests\images\logo.png

#         default global templates
    templates:
 #         default global templates
         layout:    SonataAdminBundle/standard_layout.html.twig
#         ajax:      CustomSonataBundle/ajax_layout.html.twig
#
#         # default values of actions templates, they should extend global templates
#         list:    :SonataAdminBundle:CRUD/list.html.twig
#         show:    SonataAdminBundle:CRUD:show.html.twig
#         edit:    SonataAdminBundle:CRUD:edit.html.twig
#         history: SonataAdminBundle:CRUD:history.html.twig
#         preview: SonataAdminBundle:CRUD:preview.html.twig
#
#         # default values of helper templates
#         short_object_description: SonataAdminBundle:Helper:short-object-description.html.twig





a2lix_i18n_doctrine:
    manager_registry: doctrine       # [1]
a2lix_translation_form:
    locale_provider: default       # [1]
    locales: [en,ur]      # [1-a]
    default_locale: en               # [1-b]
    required_locales: [en]         # [1-c]
    templating: "A2lixTranslationFormBundle::default.html.twig"      # [2