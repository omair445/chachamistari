<!DOCTYPE html>
<html>
   
<head>
           
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
           <title>{% block title %}Register{% endblock %}</title>
           {% block stylesheets %}{% endblock %}
     
    <link rel="stylesheet" href="{{ asset('company_register_asset/custom.css') }}"/>
    <link rel="stylesheet" href="http://www.dropzonejs.com/css/dropzone.css?v=1497966187"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css"/>
      
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
           
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/css/select2.min.css" rel="stylesheet"/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="{{ asset('company_register_asset/dropzone/dropzone.js') }}"></script>
<style>

    #dropzone {
        margin-bottom: 3rem; }

    .dropzone {
        border: 2px dashed #0087F7;
        border-radius: 5px;
        background: white; }
    .dropzone .dz-message {
        font-weight: 400; }
    .dropzone .dz-message .note {
        font-size: 0.8em;
        font-weight: 200;
        display: block;
        margin-top: 1.4rem; }

    *, *:before, *:after {
        box-sizing: border-box; }

</style>
</head>

   
<body>
<div class="container_outer">


    <div class="container">
        <form id="contact">
            <h3>Register Company </h3>
            <fieldset>
                <input placeholder="Company Name *" name="name" type="text" tabindex="1" required autofocus>
            </fieldset>
            <fieldset>
                <input placeholder="Company Phone Number *" name="number" type="number" tabindex="3" required>
            </fieldset>

            <fieldset>
                <input placeholder="Company Description *" name="description" required type="text" tabindex="3">
            </fieldset>

            <fieldset>
                <label for="openingTime">Opening Time *</label>
                <input placeholder="Opening Time *" name="openingTime" type="time" tabindex="3" required>
            </fieldset>

            <fieldset>
                <label for="closingTime">Closing Time *</label>
                <input placeholder="Closing Time *" name="closingTime" type="time" tabindex="3" required>
            </fieldset>


            <fieldset>
                <input placeholder="Facebook Page " name="faceBookUrl" type="text" tabindex="3">
            </fieldset>

            <fieldset>
                <input placeholder="Shop Age" name="shopAge" type="number" tabindex="3">
            </fieldset>
            <fieldset>
                <select required style="width: 100%" class="form-group" name="category">

                    {% for category in categories %}
                        <option value="{{ category['id'] }}">{{ category['name'] }}</option>
                    {% endfor %}
                </select>
            </fieldset>
            <fieldset>
                <div class="form-group" id="loc_address_container">
                    <div class="sonata-ba-field sonata-ba-field-standard-natural">
                        <input placeholder=" Location Address" type="text" id="address" name="loc_address"
                               class="form-control" onkeydown="codeAddress()" onchange="codeAddress()"
                               onclick="codeAddress()" required value="">
                    </div>
                </div>
            </fieldset>


            <input type="hidden" name="company_image_url" id="c_image">
            <fieldset>
                <input disabled placeholder="Latitude"  id="lat" type="text" tabindex="3" required>
                <input  placeholder="Latitude" name="lat" id="lat1" type="hidden" tabindex="3" required>
            </fieldset>
            <fieldset>
                <input disabled placeholder="Longitude"  id="long" type="text" tabindex="3" required>
                <input  name="long" id="long1" type="hidden" tabindex="3" required>
            </fieldset>

            <div class="form-group" id="loc_address_container">
                <label class=" control-label" for="loc_address">
                    Adjust Pin On Map
                </label>
                <div class="sonata-ba-field sonata-ba-field-standard-natural">
                    <div id="map_canvas" style="height:150px;"></div>
                </div>
            </div>
            <br>
            <div id="dropzone">
                <div action="{{ path('uploadImage') }}" class="dropzone needsclick dz-clickable"  id="my-awesome-dropzone">

                    <div class="dz-message needsclick">
                        Drop files here or click to upload.<br>
                        <span class="note needsclick">Or Tap here to capture Image using Phone Camera</span>
                    </div>

                </div>
            </div>
            <hr>
            <h3 align="center">Owner Details</h3>
            <br>


            <fieldset>
                <input placeholder="Owner Name *" name="ownerName" type="text" required tabindex="3">
            </fieldset>
            <fieldset>
                <input placeholder="Phone Number *" name="ownerPhone" type="number" required tabindex="3">
            </fieldset>

            <fieldset>
                <input placeholder="National Identity Card (CNIC) *" name="cnic" type="number" required tabindex="3">
            </fieldset>


            <fieldset>
                <input placeholder="Email" name="ownerEmail" type="email" tabindex="3">
            </fieldset>

            <fieldset>
                <input placeholder="Home Town" name="ownerHomeTown" type="text" tabindex="3">
            </fieldset>

            <fieldset>
                <input placeholder="Owner Age " name="ownerAge" type="number" tabindex="3">
            </fieldset>


            <button name="submit" type="submit" id="contact-submit" data-submit="...Sending">Create Company</button>


            <p class="copyright">Powered By TEAM CHACHA MISTARI</p>
        </form>

</div>
 </div> 
  
<div style="display: none" class="loading">Loading</div>


</body>

<script type="text/javascript"
        src="http://maps.google.com/maps/api/js?sensor=false&libraries=places&language=en-AU&key=AIzaSyAiIGpHBeU-KTQKEk8CblpKYkElTk_j53Y"></script>

<script>


    //Maps
    var geocoder;
    var map;
    var marker;
    var infowindow = new google.maps.InfoWindow({
        size: new google.maps.Size(150, 50)
    });

    function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(31.5546, 74.3572);
        var mapOptions = {
            zoom: 12,
            center: latlng,
            draggable: true,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }
        map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);
        google.maps.event.addListener(map, 'click', function () {
            infowindow.close();
        });
        marker = new google.maps.Marker({
            position: latlng,
            map: map,
            draggable: true,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });
        google.maps.event.addListener(marker, 'dragend', function () {
            geocodePosition(marker.getPosition());
        });

    }

    function geocodePosition(pos) {
        geocoder.geocode({
            latLng: pos
        }, function (responses) {
            console.log(responses);
            if (responses && responses.length > 0) {
                marker.formatted_address = responses[0].formatted_address;
                document.getElementById('address').value = marker.formatted_address;
                codeAddress();
            } else {
                marker.formatted_address = 'Cannot determine address at this location.';
            }
            infowindow.setContent(marker.formatted_address + "<br>coordinates: " + marker.getPosition().toUrlValue(6));
            infowindow.open(map, marker);
        });
    }

    function codeAddress() {
        var address = document.getElementById('address').value;
        if (!address) {
            address = 'Lahore';
        }
        if (address.length < 3) {
            return false;
        } else {
            if (address != 'Lahore') {
                map.setZoom(14);
            }
        }
        if (!geocoder) {
            return false;
        }
        geocoder.geocode({
            'address': address
        }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                map.setCenter(results[0].geometry.location);
                if (marker) {
                    marker.setMap(null);
                    if (infowindow) infowindow.close();
                }
                marker = new google.maps.Marker({
                    map: map,
                    draggable: true,
                    position: results[0].geometry.location
                });
                google.maps.event.addListener(marker, 'dragend', function () {
                    geocodePosition(marker.getPosition());
                });
                google.maps.event.addListener(marker, 'click', function () {
                    if (marker.formatted_address) {
                        infowindow.setContent(marker.formatted_address + "<br>coordinates: " + marker.getPosition().toUrlValue(6));
                    } else {
                        infowindow.setContent(address + "<br>coordinates: " + marker.getPosition().toUrlValue(6));
                    }
//                    $('#latitude').val(marker.getPosition().lat());
//                    $('#longitude').val(marker.getPosition().lng());
                    $("#lat").val(marker.getPosition().lat());
                    $("#long").val(marker.getPosition().lng());
                    var arrAddress = results[0].address_components;
                    var itemRoute = '';
                    var itemLocality = '';
                    var itemCountry = '';
                    var itemPc = '';
                    var itemSnumber = '';
                    var itemProvince = '';

// iterate through address_component array
                    console.log(arrAddress)
                    $.each(arrAddress, function (i, address_component) {
                        console.log('address_component:' + i);
                        console.log(address_component.long_name);
                        if (address_component.types[0] == "route") {
                            itemRoute = address_component.long_name;
                        }

                        if (address_component.types[0] == "locality") {
                            itemLocality = address_component.long_name;
                        }

                        if (address_component.types[0] == "country") {
                            itemCountry = address_component.long_name;
                        }

                        if (address_component.types[0] == "postal_code") {
                            itemPc = address_component.long_name;
                        }

                        if (address_component.types[0] == "street_number") {
                            itemSnumber = address_component.long_name;
                        }
                        if (address_component.types[0] == "administrative_area_level_1") {
                            itemProvince = address_component.long_name;
                        }
                        //return false; // break the loop
                    });

                    if (itemLocality != '') {
                        $('#loc_city').val(itemLocality);
                    }
                    if (itemCountry != '') {
                        $('#loc_country').val(itemCountry);
                    }
                    if (itemCountry != '') {
                        $('#loc_country').val(itemCountry);
                    }
                    if (itemProvince != '') {
                        $('#loc_state').val(itemProvince)
                    }
                    if (itemPc != '') {
                        console.log(itemPc)
//                        $('#loc_postal').val(itemPc);
                    }
                });
                google.maps.event.trigger(marker, 'click');
                $("#lat").val(marker.getPosition().lat());
                $("#long").val(marker.getPosition().lng());
                $("#lat1").val(marker.getPosition().lat());
                $("#long1").val(marker.getPosition().lng());

            } else {
                console.log('Geocode was not successful for the following reason: ' + status);
            }
        });

//        alert();

//        marker.getPosition().long();
    }

    google.maps.event.addDomListener(window, "load", initialize);
    var autocomplete = new google.maps.places.Autocomplete($("#address")[0], {});
    google.maps.event.addListener(autocomplete, 'place_changed', function () {
        var place = autocomplete.getPlace();
        codeAddress();
        console.log(place.address_components);
    });
    $('select').select2({
        placeholder: 'Select an option'
    });

    $("#contact").submit(function (e) {

        showLoader();
        var url = "{{ path('register_company_custom') }}";
        $.ajax({
            type: "POST",
            url: url,
            data: $("#contact").serialize(),
            success: function (data) {
                hideLoader();
                showSuccess();
                $('#contact')[0].reset();
                window.setTimeout(function(){location.reload()},3000)

            },
            error: function (data) {
                hideLoader();
                showError();
                $('#contact')[0].reset();
                window.setTimeout(function(){location.reload()},3000)
            }
        });

        e.preventDefault(); // avoid to execute the actual submit of the form.
    });

    function showSuccess() {
        toastr.success('Company Registered Successfully', 'Chacha Mistari Says')
    }

    function showError() {
        toastr.error('Unable to save Company try again with correct values', 'Chacha Mistari Says')
    }

    function showLoader() {
        $(".loading").fadeIn();
    }

    function hideLoader() {
        $(".loading").fadeOut();
    }

    $('#contact').on('keyup keypress', function (e) {
        var keyCode = e.keyCode || e.which;
        if (keyCode === 13) {
            e.preventDefault();
            return false;
        }
    });

    $("#address").on('change keyup paste', function () {
        codeAddress();
        console.log("Change Pate or KeyUp Called ");
    });

    Dropzone.options.myAwesomeDropzone = {
        paramName: "file", // The name that will be used to transfer the file
        maxFilesize: 10, // MB
        maxFiles: 3,
        capture:true,
        uploadMultiple: false,
        init: function() {
            this.hiddenFileInput.setAttribute("capture", "camera");
            this.on("maxfilesexceeded", function(file){
                toastr.error('No more images please', 'Chacha Mistari Says')
            });
        },
        success: function(file, response){
            var json = jQuery.parseJSON(response);

             console.log(json.path );
             setCompanyImage(json.path)
        }
    };

    function setCompanyImage(value) {
        $("#c_image").val(value)
    }



</script>

{#<script src="https://www.gstatic.com/firebasejs/4.3.1/firebase.js"></script>#}
{#<script src="https://www.gstatic.com/firebasejs/4.3.1/firebase-app.js"></script>#}
{#<script src="https://www.gstatic.com/firebasejs/4.3.1/firebase-auth.js"></script>#}
{#<script src="https://www.gstatic.com/firebasejs/4.3.1/firebase-database.js"></script>#}
{#<script src="https://www.gstatic.com/firebasejs/4.3.1/firebase-messaging.js"></script>#}
{#<script>#}
    {#// Initialize Firebase#}
    {#// #}
    {#var config = {#}
        {#apiKey: "AIzaSyBvIlSP9yS52dpriW-NMjcW6m7N50WsdRU",#}
        {#authDomain: "ddsd-57a4b.firebaseapp.com",#}
        {#databaseURL: "https://ddsd-57a4b.firebaseio.com/",#}
{#//        storageBucket: "<BUCKET>.appspot.com",#}
        {#messagingSenderId: "682986053425",#}
    {#};#}
    {#firebase.initializeApp(config);#}

    {#var phoneNumber = "+923333032444";#}
    {#var appVerifier = window.recaptchaVerifier;#}
    {#firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)#}
        {#.then(function (confirmationResult) {#}
            {#// SMS sent. Prompt user to type the code from the message, then sign the#}
            {#// user in with confirmationResult.confirm(code).#}
            {#window.confirmationResult = confirmationResult;#}
        {#}).catch(function (error) {#}
        {#// Error; SMS not sent#}
        {#// ...#}
    {#});#}
{#</script>#}
</html>